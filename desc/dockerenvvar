DOCKER RUNTIME / DOCKERFILE ENV VARIABLE USAGES
===============================================

official document
-----------------
# two ways of using entrypoint script inside Dockerfile:
  https://docs.docker.com/engine/reference/builder/#exec-form-entrypoint-example
  https://docs.docker.com/engine/reference/builder/#shell-form-entrypoint-example

# shell form (shell does the env var expansion not docker):
  ENTRYPOINT [ "sh", "-c", "echo $HOME" ]
  an examples to illustrate shell form usages: https://stackoverflow.com/a/37904830

# exec form (does not invoke a command shell, no var substitution on $HOME):
  ENTRYPOINT [ "echo", "$HOME" ]


setting docker env variables
----------------------------
https://docs.docker.com/engine/reference/commandline/run/#env

# directory
  .
  ├── Dockerfile
  ├── entrypoint.sh
  └── envfile


# Dockerfile: for the test image
  FROM alpine:latest
  
  ENV MY_ENV_VAR=world
  ADD entrypoint.sh /
  ENTRYPOINT /entrypoint.sh "Hello, $MY_ENV_VAR!"


# entrypoint.sh: script used when docker container startup
  #!/bin/sh
  echo $1

# cat envfile: file that hold key-value pairs of env variable
  MY_ENV_VAR=-smbios type=1,product="TIMOS: chassis=IXR-R6 card=cpiom-ixr-r6 slot='A'"
  ENV_VAR2=world

# test procedure
  $ docker build -t testenv .

  $ docker run --rm testenv:latest
    hello, world!
  
  $ docker run --rm -e MY_ENV_VAR=worlddddddd testenv:latest
    hello, worlddddddd
  
  $ docker run --rm --env-file envcat testenv:latest
    hello, -smbios type=1,product="TIMOS: chassis=IXR-R6 card=cpiom-ixr-r6 slot='A'"

# tips
  by using --env-file, multiple variables with special characters can be transfer to entrypoint.sh at ease,
  but note that the env file should be located at the same dir of "docker run" command.


ENV & ARG
---------
setting ARG and ENV values leaves traces in the Docker image.
don’t use them for secrets which are not meant to stick around..
can with multi-stage builds (see desc/dockermultistagebuild for details) to hide info by storing them in base image.

     +-----------------------------------+
     | ┌──────────┐   ARGs are available |
     | │dockerfile│                      │
     | └────┬─────┘                      |
 +----------┼--------------------------------+
 |   |      │building image              |   | <-- intersection part
 |   |      │                            |   |
 |   +------│----------------------------+   |
 |       ┌──┴──┐                             |
 |       │image│                             |
 |       └──┬──┘                             |
 |          +------ docker run               |
 |     ┌────┴────┐                           |
 |     │container│                           |
 |     └─────────┘    ENVs are available     |
 +-------------------------------------------+


find ARG / ENV / build cmd of image
-----------------------------------
  $ docker history --no-trunc ${image_id}


find ENV of image
-----------------
  $ docker inspect ${image_id} | grep ENV


ARG & ENV for sensitive data - a few test
-----------------------------------------
Even though ARG values are not available to the container, they can easily be inspected through docker CLI. 
ARG and ENV are a poor choice for sensitive data if untrusted users have access to your images.
see "docker history --no-trunc ${image_id}"

>>> test case 1: visibility of ENV & ARG inside container
$ cat ./Dockerfile.v1                                                         # dockerfile content
  FROM alpine:latest 
  ENV ALPINE_VER=3.17
  ARG SITE=artifactory-blr1.int.net.nokia.com
  ARG REBORN_BUILD_KEY=reborn-638089aa
  ARG ARTIFACTORY_REBORN=https://$SITE/artifactory/rebornlinux-generic-local

$ docker build -f ./Dockerfile.v1 -t test:v1 .                                # buildup image
$ docker history --no-trunc test:v1                                           # check the history of a image (trunc output manually)
  IMAGE           CREATED          CREATED BY                                                                               SIZE      COMMENT
  sha256:a4e6af   36 seconds ago   /bin/sh -c #(nop)  ARG ARTIFACTORY_REBORN=https://artifactory-blr1.int.net.nokia.com/... 0B        
  sha256:bf5c00   37 seconds ago   /bin/sh -c #(nop)  ARG REBORN_BUILD_KEY=reborn-638089aa                                  0B        
  sha256:4e9072   37 seconds ago   /bin/sh -c #(nop)  ARG SITE=artifactory-blr1.int.net.nokia.com                           0B        
  sha256:fab063   39 seconds ago   /bin/sh -c #(nop)  ENV ALPINE_VER=3.17                                                   0B        
  sha256:7e01a0   2 months ago     /bin/sh -c #(nop)  CMD ["/bin/sh"]                                                       0B        
  <missing>       2 months ago     /bin/sh -c #(nop)  ADD file:32ff5e in /                                                  7.34MB    

$ docker run -it --rm test:v1 sh                                              # run & access the container test:v1
/ # echo $ALPINE_VER                                                          # the ENV is still available
3.17
/ # echo $ARTIFACTORY_REBORN                                                  # null: the ARG is not available inside container

/ # echo $SITE                                                                # null: the ARG is not available inside container

>>> test case 2: hide the ARG value: define ARG above FROM clause, then redeclare it later:
$ cat ./Dockerfile.v2                                                         # dockerfile undertest v2
  ARG ALPINE_VER=3.17                                                         # define variable=value
  ARG SITE=artifactory-blr1.int.net.nokia.com
  ARG REBORN_BUILD_KEY=reborn-638089aa
  
  FROM alpine:latest                                                          # from

  ARG ALPINE_VER                                                              # declare variable again
  ARG SITE
  ARG REBORN_BUILD_KEY
  ARG ARTIFACTORY_REBORN=https://$SITE/artifactory/rebornlinux-generic-local

$ docker build -f ./Dockerfile.v2 -t test:v2 .                                # build image

$ docker history --no-trunc test:v2                                           # only ARG name visible, the value are hidden(invisible)
  IMAGE            CREATED          CREATED BY         SIZE      COMMENT
  sha256:a9e61d7   11 seconds ago   /bin/sh -c #(nop)  ARG ARTIFACTORY_REBORN=https://artifactory-blr1...   0B
  sha256:6b0f10c   11 seconds ago   /bin/sh -c #(nop)  ARG REBORN_BUILD_KEY                                 0B
  sha256:7a2272e   11 seconds ago   /bin/sh -c #(nop)  ARG SITE                                             0B
  sha256:49a0965   12 seconds ago   /bin/sh -c #(nop)  ARG ALPINE_VER                                       0B
  sha256:7e01a0d   4 weeks ago      /bin/sh -c #(nop)  CMD ["/bin/sh"]                                      0B
  <missing>        4 weeks ago      /bin/sh -c #(nop)  ADD file:32ff5e7a78b890996ee4681cc0a26... in /       7.34MB

>>> test case 3: the ENV cannot be hidden: cannot define above FROM clause
$ cat ./dockerfile.v3
  # ENV ALPINE_VER=3.17                                                       # wrong!: Error response from daemon: no build stage in current context
                                                                              # cannot use ENV before FROM clause
  ARG ALPINE_VER=3.17                                                         # define ALPINE_VER
  ARG SITE=artifactory-blr1.int.net.nokia.com
  ARG REBORN_BUILD_KEY=reborn-638089aa
  
  FROM alpine:latest                                                          # image base
  
  # ENV ALPINE_VER                                                            # wrong!: must follow ENV xxx=xxx format
  ARG ALPINE_VER                                                              # declare reuse of ALPINE_VER (3.17)
  ENV ALPINE_VER=$ALPINE_VER                                                  # setup ENV using ARG declared
  ARG SITE
  ARG REBORN_BUILD_KEY
  ARG ARTIFACTORY_REBORN=https://$SITE/artifactory/rebornlinux-generic-local

$ docker build -f ./Dockerfile.v3 -t test:v3 .                                # build image

$ docker history test:v3 --no-trunc                                           # check for the ENV/ARG hidden effects
  IMAGE           CREATED         CREATED BY                                                    SIZE      COMMENT
  sha256:9fb757   2 minutes ago   /bin/sh -c #(nop)  ARG ARTIFACTORY_REBORN=https://artifa...   0B
  sha256:b57bc6   2 minutes ago   /bin/sh -c #(nop)  ARG REBORN_BUILD_KEY                       0B
  sha256:de1a99   2 minutes ago   /bin/sh -c #(nop)  ARG SITE                                   0B
  sha256:f13213   2 minutes ago   /bin/sh -c #(nop)  ENV ALPINE_VER=3.17                        0B
  sha256:49a096   5 weeks ago     /bin/sh -c #(nop)  ARG ALPINE_VER                             0B
  sha256:7e01a0   2 months ago    /bin/sh -c #(nop)  CMD ["/bin/sh"]                            0B
  <missing>       2 months ago    /bin/sh -c #(nop)  ADD file:32ff5e7a78b890996ee468 in /       7.34MB

$ docker run -it --rm test:v3 sh                                              # access the container
/ # echo $ALPINE_VER                                                          # the ENV variable is still accessible
3.17
/ # echo $SITE                                                                # the ARG variable is not accessible

/ # echo $ARTIFACTORY_REBORN

>>> test case 4: the ENV variable can be inherited by "sub-images"  
$ cat dockerfile.v4                                                           # a single line dockerfile
  FROM test:v2                                                                # this image is a "child" image of test:v2

$ docker build -f ./dockerfile.v4 -t test:v4 .                                # buildup
$ docker history test:v4                                                      # check ARG/ENV visibility
IMAGE          CREATED          CREATED BY                                      SIZE      COMMENT
ca1e454e753b   55 seconds ago   /bin/sh -c #(nop)  ARG TEST                     0B
9fb7576fdec7   24 minutes ago   /bin/sh -c #(nop)  ARG ARTIFACTORY_REBORN=ht…   0B
b57bc688c450   24 minutes ago   /bin/sh -c #(nop)  ARG REBORN_BUILD_KEY         0B
de1a99d0ce3e   24 minutes ago   /bin/sh -c #(nop)  ARG SITE                     0B
f1321325e93a   24 minutes ago   /bin/sh -c #(nop)  ENV ALPINE_VER=3.17          0B
49a09657211f   5 weeks ago      /bin/sh -c #(nop)  ARG ALPINE_VER               0B
7e01a0d0a1dc   2 months ago     /bin/sh -c #(nop)  CMD ["/bin/sh"]              0B
<missing>      2 months ago     /bin/sh -c #(nop) ADD file:32ff5e7a78b890996…   7.34MB

$ docker run -it --rm test:v4 sh                                              # access the container 
/ # echo $ALPINE_VER                                                          # the ENV can be inherited & accessible
3.17
/ # echo $SITE                                                                # the ARG cannot be accessible

/ # exit
