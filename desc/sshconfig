how to setup && utilize the ssh key
-----------------------------------
#1 generate ssh key using ssh-keygen
$ ssh-keygen                                                      # interactively generated ssh key
  ...

#2 check the key permissions
$ ls -l ~/.ssh
  total 24
  -rw-rw-r-- 1 metung metung  397 Sep 13  2022 authorized_keys
  -rw------- 1 metung metung 1675 Sep  6  2022 id_rsa             # private key: decryption + signature
  -rw------- 1 metung metung  397 Sep  6  2022 id_rsa.pub         # public key: encryption + signature verification
  -rw-r--r-- 1 metung metung 8903 Aug 21 10:42 known_hosts        # the file contains host/public key pairs connected once
$ ls -l -d ~/.ssh                                                 # check the directory inode info
  drwx------ 2 metung metung 4096 Mar 13 08:37 /home/metung/.ssh

#3 set the right permission for sshkey
$ chmod 600 ~/.ssh/id_rsa                                         # 42:  w/r for private key by user
$ chmod 600 ~/.ssh/id_rsa.pub                                     # 42:  w/r for public key by user
$ chmod 700 ~/.ssh                                                # 421: w/r/x for ssh dir by user


how to setup ssh connection in keep alive mode
----------------------------------------------
# check permission of /etc/ssh/sshd_config
  $ ls -lh /etc/ssh/sshd_config
  -rw-r--r-- 1 root users 3.3K Sep 18  2020 /etc/ssh/sshd_config

# check /etc/ssh/sshd_config
  $ sudo cat /etc/ssh/sshd_config
  ...
  ClientAliveInterval 0
  ClientAliveCountMax 0
  ...

# edit /etc/ssh/sshd_config
  $ sudo vim /etc/ssh/sshd_config
  ...
  ClientAliveInterval 120          # the interval for server sending request to client, client response
  ClientAliveCountMax 30           # count of server sending request but client failed to response, >maxcount will disconnect
  ...

# but still disconnect after a period
  $ client_loop: send disconnect: Connection reset by peer

# edit ~/.ssh/config
  $ sudo vim ~/.ssh/config 
  Host *
    ServerAliveInterval 20
    TCPKeepAlive no                # dont send keepalive messages to the server to detect remote state, just assume the connection alive
                                   # when set yes, will continuously send msg and wait for server's response

# still failed to keep ssh alive
  $ client_loop: send disconnect: Connection reset by peer

# edit /etc/ssh/ssh_config:
  $ sudo vim /etc/ssh/ssh_config 
  Host *
          GSSAPIAuthentication yes
  # If this option is set to yes then remote X11 clients will have full access
  # to the original X11 display. As virtually no X11 client supports the untrusted
  # mode correctly we set this to yes.
          ForwardX11Trusted yes
  # Send locale-related environment variables
          SendEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
          SendEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
          SendEnv LC_IDENTIFICATION LC_ALL LANGUAGE
          SendEnv XMODIFIERS
          StrictHostKeyChecking no
          ServerAliveInterval 30
          ServerAliveCountMax 60
          TCPKeepAlive=yes

# still failed to keepalive
$ client_loop: send disconnect: Connection reset by peer


what is the fingerprint of ssh
------------------------------
ref: https://superuser.com/a/422008


difference between clone through ssh and https
----------------------------------------------
$ git clone git@host:username/repository.git                      # clone by ssh: add public key to repo, no credentials sent over net
$ git clone https://github.com/username/repo.git                  # clone by https: prompt you for username & passwd
