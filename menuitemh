#include <vector>
#include <string>
#include <map>

struct MenuItem{
    std::string name;
    std::vector<MenuItem> submenu;
};

// load data into menu data structure => todo: move the data structure to a standalone file
MenuItem* initdata(){
    // create the menu structure
    MenuItem *menu_ptr = new MenuItem;
    menu_ptr->name = "Main Menu";
    menu_ptr->submenu = {
        {"ls series +", {{"ls +", {{"show list of file/dir in human readble format (newest modified the first)#ls -lht#"},
                                   {"show list of file/dir in human readble format (oldest modified the first)#ls -lhtr#"},
                                   {"show list of file/dir in a table format#ls | column -c ${num_item_each_row}#"},
                                   {"check whether a dir is empty or not (if-else in oneline)#[ $(ls -A ${dir} | wc -l) -eq 0 ] && echo 'empty' || echo 'not empty'#"}}},
                         {"lsof +", {{"show manual#man lsof#"},
                                     {"show network files in all addr (use portnum not portname)#sudo lsof -i -P#"}}},
                         {"lsns +", {{"show manual for format system namespace output#man lsns#"},
                                     {"list system namespaces#lsns -l#"}}}}},
        {"kill proc +", {{"kill +"},
                         {"pkill +", {{"kill all processes with name exactly match the pattern#pkill -f ${pattern}#"}}}}},
        {"data serialization +", {{"json +"},
                                  {"yaml +", {{"*multiline string in yaml##yaml"}}}}},
    };
    return menu_ptr;
}
